/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        enterCombo {
            bindings = <&kp ENTER>;
            key-positions = <38 39>;
            layers = <0 1 2>;
        };

        capsLockCombo {
            bindings = <&kp CAPSLOCK>;
            key-positions = <36 41>;
        };

        tabCombo {
            bindings = <&kp TAB>;
            key-positions = <17 38>;
        };

        escapeCombo {
            bindings = <&kp ESC>;
            key-positions = <18 39>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            label = "Base";
            bindings = <
&none  &kp Q      &kp W      &kp F           &kp P      &kp B        &kp J          &kp L      &kp U            &kp Y      &kp SEMICOLON  &none
&none  &kp LS(A)  &kp LC(R)  &kp LA(S)       &kp LG(T)  &kp G        &kp M          &kp RG(N)  &kp RA(E)        &kp RC(I)  &kp RS(O)      &none
&none  &kp Z      &kp X      &kp C           &kp D      &kp V        &kp K          &kp H      &kp COMMA        &kp DOT    &kp FSLH       &none
                             &kp LEFT_SHIFT  &mo 1      &kp SPACE    &kp BACKSPACE  &mo 2      &kp RIGHT_SHIFT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            label = "Lower";
            bindings = <
&none  &kp N1        &kp N2        &kp N3        &kp N4        &kp N5          &kp N6                 &kp N7        &kp N8                &kp N9    &kp N0     &none
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &none                  &kp LEFT      &kp UP                &kp DOWN  &kp RIGHT  &none
&none  &trans        &trans        &kp C_VOL_DN  &kp C_VOL_UP  &kp C_MUTE      &kp C_BRIGHTNESS_AUTO  &kp C_BRI_UP  &kp C_BRIGHTNESS_DEC  &trans    &trans     &none
                                   &kp LGUI      &trans        &kp SPACE       &kp BACKSPACE          &trans        &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            label = "Raise";
            bindings = <
&none  &kp EXCL   &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET      &kp AMPS   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp KP_MULTIPLY  &none
&none  &kp GRAVE  &trans  &trans    &trans    &trans       &kp MINUS      &kp EQUAL  &kp LBKT              &kp RBKT               &kp BSLH         &none
&none  &trans     &trans  &trans    &trans    &trans       &kp UNDER      &kp PLUS   &kp LBRC              &kp RBRC               &kp PIPE         &none
                          &kp LGUI  &trans    &kp SPACE    &kp BACKSPACE  &trans     &kp RALT
            >;
        };
    };
};
